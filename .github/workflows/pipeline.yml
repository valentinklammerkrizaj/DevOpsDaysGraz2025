name: Release Pipeline

on:
  push: {}
  workflow_dispatch:
    inputs:
      version:
        description: Name of the version
        required: true
        type: string

jobs:
  release-pipeline:
    name: Release Pipeline
    runs-on: windows-latest
    env:
      CERT_NAME: cert.pfx

    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet tools
        uses: actions/setup-dotnet@v4
        with: { dotnet-version: '8.0.x' }

      - name: Run Core Tests
        run: dotnet test .\src\DevOpsDaysTasks.Core.Tests

      - name: build project
        env:
          VERSION: ${{ inputs.version || '0.0.0' }}
        run: |
          dotnet publish -c Release src/DevOpsDaysTasks.UI -o DevOpsDaysTasks /p:Version=${{ env.VERSION }} /p:VersionName=Bobcat
          mkdir DevOpsDaysTasks/Templates/
          cp .\workshop_material\default-tasks.xml .\DevOpsDaysTasks\Templates\

      - name: Create Cert
        run: |
          $base64 = "${{ secrets.SIGN_PFX_PRIVATE_KEY }}"
          $content = [System.Convert]::FromBase64String($base64)
          Set-Content ${{ env.CERT_NAME }} -Value $content -AsByteStream

      - name: sign
        run: |
          .\scripts\sign.ps1 .\DevOpsDaysTasks\DevOpsDaysTasks.UI.exe -PfxFile ${{ env.CERT_NAME }} -PfxPassword Password

      - name: Collect Files
        uses: actions/checkout@v4
        with:
          repository: valentinklammerkrizaj/DevOpsDaysFileStorage
          path: ExternalFiles

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DevOpsDaysTasks
          path: DevOpsDaysTasks
